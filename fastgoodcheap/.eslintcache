[{"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\index.tsx":"1","D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\CostumeCheckbox.tsx":"2","D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\useToggle.ts":"3","D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\ActiveText.tsx":"4","D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\Option.tsx":"5","D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\Texts.tsx":"6","D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\Text.tsx":"7"},{"size":1723,"mtime":1607914885455,"results":"8","hashOfConfig":"9"},{"size":498,"mtime":1607911878273,"results":"10","hashOfConfig":"9"},{"size":315,"mtime":1607910893744,"results":"11","hashOfConfig":"9"},{"size":1742,"mtime":1607909917877,"results":"12","hashOfConfig":"9"},{"size":971,"mtime":1607913375872,"results":"13","hashOfConfig":"9"},{"size":1151,"mtime":1607913391465,"results":"14","hashOfConfig":"9"},{"size":1209,"mtime":1607910274195,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"youovq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\index.tsx",[],"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\CostumeCheckbox.tsx",[],"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\useToggle.ts",[],"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\ActiveText.tsx",[],["32","33"],"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\Option.tsx",[],"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\Texts.tsx",[],"D:\\Edgar\\Dev\\GitHubProjects\\FastGoodCheap\\fastgoodcheap\\src\\Text.tsx",["34"],"import React, { FunctionComponent, useRef, useEffect, useCallback } from \"react\"\r\n\r\nimport useToggle from \"./useToggle\"\r\n\r\nconst selectTextFromInput = (e: React.FocusEvent<HTMLInputElement>) => e.target.select()\r\n\r\ntype Text = FunctionComponent<{\r\n  isOn: boolean\r\n  text: string\r\n  onChangeText: (data: string) => void\r\n}>\r\nconst Text: Text = ({ isOn, text, onChangeText }) => {\r\n  const [isEditing, toggleEditMode] = useToggle(false)\r\n\r\n  const correctFontWeight = { fontWeight: isOn ? 500 : 300 }\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n  useEffect(() => {\r\n    inputRef.current && inputRef.current.focus && inputRef.current.focus()\r\n  })\r\n\r\n  const onEnter = useCallback(e => e.key === \"Enter\" && toggleEditMode(), [toggleEditMode])\r\n\r\n  return isEditing ? (\r\n    <input\r\n      type=\"text\"\r\n      ref={inputRef}\r\n      defaultValue={text}\r\n      onBlur={toggleEditMode}\r\n      onFocus={selectTextFromInput}\r\n      style={correctFontWeight}\r\n      onKeyDown={onEnter}\r\n      onChange={e => onChangeText(e.target.value)}\r\n    />\r\n  ) : (\r\n    <span title=\"Double click to edit\" style={correctFontWeight} onDoubleClick={toggleEditMode}>\r\n      {text}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Text",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":7,"nodeType":"41","messageId":"42","endLine":12,"endColumn":17},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-redeclare","'Text' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]